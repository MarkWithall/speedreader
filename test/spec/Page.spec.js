// Generated by CoffeeScript 1.6.2
(function() {
  var FakeWin, Page, sr,
    _this = this;

  if (typeof exports !== "undefined" && exports !== null) {
    sr = require('../speedread');
    Page = sr.Page;
  } else {
    Page = window.Page;
  }

  FakeWin = (function() {
    function FakeWin() {}

    FakeWin.prototype.setInterval = function(c, t) {};

    FakeWin.prototype.clearInterval = function(i) {};

    FakeWin.prototype.document = {
      createElement: function(t) {},
      body: {
        appendChild: function(c) {},
        removeChild: function(c) {}
      }
    };

    FakeWin.prototype.event = null;

    return FakeWin;

  })();

  describe('Page', function() {
    var page, win;

    win = null;
    page = null;
    beforeEach(function() {
      win = new FakeWin();
      return page = new Page(win);
    });
    it('passes createElement through to window.createElement', function() {
      spyOn(win.document, 'createElement');
      page.createElement(1);
      return expect(win.document.createElement).toHaveBeenCalledWith(1);
    });
    it('passes appendChild through to window.document.body.appendChild', function() {
      spyOn(win.document.body, 'appendChild');
      page.appendChild(1);
      return expect(win.document.body.appendChild).toHaveBeenCalledWith(1);
    });
    it('passes removeChild through to window.document.body.removeChild', function() {
      spyOn(win.document.body, 'removeChild');
      page.removeChild(1);
      return expect(win.document.body.removeChild).toHaveBeenCalledWith(1);
    });
    it('passes setInterval through to window.setInterval', function() {
      spyOn(win, 'setInterval');
      page.setInterval(1, 2);
      return expect(win.setInterval).toHaveBeenCalledWith(1, 2);
    });
    return it('passes clearInterval through to window.clearInterval', function() {
      spyOn(win, 'clearInterval');
      page.clearInterval(1);
      return expect(win.clearInterval).toHaveBeenCalledWith(1);
    });
  });

}).call(this);
